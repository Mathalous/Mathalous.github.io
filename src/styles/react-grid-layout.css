.grid-item{
  display:flex;
  flex-direction: column;
  overflow:auto;
  width:100%;
  height:100%;
  /* 
    This is used to prevent overflowing the flex container
    https://stackoverflow.com/questions/36230944/prevent-flex-items-from-overflowing-a-container
  */
  min-width: 0%;
  min-height: 0%;
}

.handle-text{
  margin:auto;
}

.react-grid-body{
  flex: 1;
  overflow: auto;
}
.react-grid-handle{
  flex: 0 1;
  justify-content: center;
  align-content: center;
  text-align: center;
  background-color: var(--accent-grid-bgc, gray);
  font-size: 1.1em;
  border-radius: var(--border-radius) var(--border-radius) calc(var(--border-radius)/3) calc(var(--border-radius)/3);
  
  max-width: 100%;
  max-height: 100%;
  color:var(--accent-grid-txt, white);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.drag, .drag > *{
  cursor: grab;
}
.drag:active, .drag > *:active, .drag:active > *{
  cursor: grabbing;
}


.react-grid-handle > hr{
  margin:0;
  padding-top: 2px;
  padding-bottom: 2px;
}

.react-grid-layout {
  position: relative;
  transition: height 200ms ease;
  --border-radius: 5px;
}
.react-grid-item {
  transition: all 200ms ease;
  transition-property: left, top;
  background-color: var(--accent-bgc, black);
  color:var(--accent-txt, white);
  border-radius: var(--border-radius);
}
.react-grid-item.cssTransforms {
  transition-property: transform;
}
.react-grid-item.resizing {
  z-index: 1;
  will-change: width, height;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
}

.react-grid-item.react-grid-placeholder {
  background: var(--warn-bgc, yellow);
  opacity: 0.3;
  transition-duration: 100ms;
  z-index: 2;
  border-radius: 4px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.react-grid-item > .react-resizable-handle {
  position: absolute;
  width: 20px;
  height: 20px;
}

.react-grid-item > .react-resizable-handle::after {
  content: "";
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 5px;
  height: 5px;
  border-right: 2px solid var(--accent-txt, blue);
  border-bottom: 2px solid var(--accent-txt, blue);
}

.react-resizable-hide > .react-resizable-handle {
  display: none;
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-sw {
  bottom: 0;
  left: 0;
  cursor: sw-resize;
  transform: rotate(90deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-se {
  bottom: 0;
  right: 0;
  cursor: se-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-nw {
  top: 0;
  left: 0;
  cursor: nw-resize;
  transform: rotate(180deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-ne {
  top: 0;
  right: 0;
  cursor: ne-resize;
  transform: rotate(270deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-w,
.react-grid-item > .react-resizable-handle.react-resizable-handle-e {
  top: 50%;
  margin-top: -10px;
  cursor: ew-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-w {
  left: 0;
  transform: rotate(135deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-e {
  right: 0;
  transform: rotate(315deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-n,
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  left: 50%;
  margin-left: -10px;
  cursor: ns-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-n {
  top: 0;
  transform: rotate(225deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  bottom: 0;
  transform: rotate(45deg);
}
.react-grid-item.static{
  background-color: var(--btn-pri-bgc, green); /*#cce*/
  color:            var(--btn-pri-txt, green);
}
.react-draggable-transparent-selection{
  user-select: none; 
}